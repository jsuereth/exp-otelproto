// Code generated by protoc-gen-go. DO NOT EDIT.
// source: logs_service.proto

package factp

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ExportLogsServiceRequest struct {
	// An array of ResourceSpans.
	// For data coming from a single resource this array will typically contain one
	// element. Intermediary nodes (such as OpenTelemetry Collector) that receive
	// data from multiple origins typically batch the data before forwarding further and
	// in that case this array will contain multiple elements.
	ResourceLogs         []*ResourceLogs `protobuf:"bytes,1,rep,name=resource_logs,json=resourceLogs,proto3" json:"resource_logs,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *ExportLogsServiceRequest) Reset()         { *m = ExportLogsServiceRequest{} }
func (m *ExportLogsServiceRequest) String() string { return proto.CompactTextString(m) }
func (*ExportLogsServiceRequest) ProtoMessage()    {}
func (*ExportLogsServiceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7af0811a237bf236, []int{0}
}

func (m *ExportLogsServiceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExportLogsServiceRequest.Unmarshal(m, b)
}
func (m *ExportLogsServiceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExportLogsServiceRequest.Marshal(b, m, deterministic)
}
func (m *ExportLogsServiceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExportLogsServiceRequest.Merge(m, src)
}
func (m *ExportLogsServiceRequest) XXX_Size() int {
	return xxx_messageInfo_ExportLogsServiceRequest.Size(m)
}
func (m *ExportLogsServiceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ExportLogsServiceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ExportLogsServiceRequest proto.InternalMessageInfo

func (m *ExportLogsServiceRequest) GetResourceLogs() []*ResourceLogs {
	if m != nil {
		return m.ResourceLogs
	}
	return nil
}

type ExportLogsServiceResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ExportLogsServiceResponse) Reset()         { *m = ExportLogsServiceResponse{} }
func (m *ExportLogsServiceResponse) String() string { return proto.CompactTextString(m) }
func (*ExportLogsServiceResponse) ProtoMessage()    {}
func (*ExportLogsServiceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7af0811a237bf236, []int{1}
}

func (m *ExportLogsServiceResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExportLogsServiceResponse.Unmarshal(m, b)
}
func (m *ExportLogsServiceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExportLogsServiceResponse.Marshal(b, m, deterministic)
}
func (m *ExportLogsServiceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExportLogsServiceResponse.Merge(m, src)
}
func (m *ExportLogsServiceResponse) XXX_Size() int {
	return xxx_messageInfo_ExportLogsServiceResponse.Size(m)
}
func (m *ExportLogsServiceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ExportLogsServiceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ExportLogsServiceResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*ExportLogsServiceRequest)(nil), "factp.ExportLogsServiceRequest")
	proto.RegisterType((*ExportLogsServiceResponse)(nil), "factp.ExportLogsServiceResponse")
}

func init() { proto.RegisterFile("logs_service.proto", fileDescriptor_7af0811a237bf236) }

var fileDescriptor_7af0811a237bf236 = []byte{
	// 208 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x8f, 0x31, 0x4b, 0xc5, 0x30,
	0x14, 0x85, 0x2d, 0x62, 0x87, 0x5b, 0x05, 0x89, 0x4b, 0xad, 0x83, 0xa5, 0x53, 0xa7, 0x80, 0x75,
	0x71, 0x72, 0x28, 0xb8, 0x29, 0x94, 0xea, 0x28, 0x14, 0x0d, 0xd7, 0x52, 0x88, 0xbd, 0xf1, 0x26,
	0x2d, 0xbe, 0x7f, 0xff, 0x48, 0xd3, 0xa1, 0xc3, 0xeb, 0x98, 0x7b, 0xbe, 0xf3, 0x91, 0x03, 0x42,
	0x53, 0x6f, 0x3b, 0x8b, 0x3c, 0x0f, 0x0a, 0xa5, 0x61, 0x72, 0x24, 0x2e, 0x7e, 0xbe, 0x94, 0x33,
	0x19, 0xf8, 0x28, 0x9c, 0x8a, 0x0f, 0x48, 0x5f, 0xfe, 0x0d, 0xb1, 0x7b, 0xa5, 0xde, 0xbe, 0x07,
	0xba, 0xc5, 0xbf, 0x09, 0xad, 0x13, 0x4f, 0x70, 0xc5, 0x68, 0x69, 0x62, 0x85, 0x9d, 0xaf, 0xa4,
	0x51, 0x7e, 0x5e, 0x26, 0xd5, 0x8d, 0x5c, 0x34, 0xb2, 0x5d, 0x33, 0xdf, 0x6c, 0x2f, 0x79, 0xf3,
	0x2a, 0xee, 0xe0, 0xf6, 0x84, 0xd5, 0x1a, 0x1a, 0x2d, 0x56, 0x9f, 0x90, 0x6c, 0xce, 0xe2, 0x0d,
	0xe2, 0xc0, 0x8a, 0xfb, 0x55, 0xbc, 0xf7, 0xa1, 0x2c, 0xdf, 0x07, 0x82, 0xbb, 0x38, 0xab, 0x9f,
	0xa1, 0x1c, 0x48, 0x92, 0xc1, 0xd1, 0xa1, 0xc6, 0x5f, 0x74, 0x7c, 0x08, 0x53, 0xa5, 0x22, 0xad,
	0x51, 0x39, 0x62, 0xb9, 0xec, 0x9f, 0x1f, 0xea, 0xeb, 0x8d, 0xa2, 0xf1, 0x4c, 0x13, 0x7d, 0xc7,
	0x0b, 0xfc, 0x78, 0x0c, 0x00, 0x00, 0xff, 0xff, 0xf3, 0xec, 0x32, 0x7f, 0x40, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// LogsServiceClient is the client API for LogsService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type LogsServiceClient interface {
	// For performance reasons, it is recommended to keep this RPC
	// alive for the entire life of the application.
	Export(ctx context.Context, in *ExportLogsServiceRequest, opts ...grpc.CallOption) (*ExportLogsServiceResponse, error)
}

type logsServiceClient struct {
	cc *grpc.ClientConn
}

func NewLogsServiceClient(cc *grpc.ClientConn) LogsServiceClient {
	return &logsServiceClient{cc}
}

func (c *logsServiceClient) Export(ctx context.Context, in *ExportLogsServiceRequest, opts ...grpc.CallOption) (*ExportLogsServiceResponse, error) {
	out := new(ExportLogsServiceResponse)
	err := c.cc.Invoke(ctx, "/factp.LogsService/Export", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// LogsServiceServer is the server API for LogsService service.
type LogsServiceServer interface {
	// For performance reasons, it is recommended to keep this RPC
	// alive for the entire life of the application.
	Export(context.Context, *ExportLogsServiceRequest) (*ExportLogsServiceResponse, error)
}

// UnimplementedLogsServiceServer can be embedded to have forward compatible implementations.
type UnimplementedLogsServiceServer struct {
}

func (*UnimplementedLogsServiceServer) Export(ctx context.Context, req *ExportLogsServiceRequest) (*ExportLogsServiceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Export not implemented")
}

func RegisterLogsServiceServer(s *grpc.Server, srv LogsServiceServer) {
	s.RegisterService(&_LogsService_serviceDesc, srv)
}

func _LogsService_Export_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ExportLogsServiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LogsServiceServer).Export(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/factp.LogsService/Export",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LogsServiceServer).Export(ctx, req.(*ExportLogsServiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _LogsService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "factp.LogsService",
	HandlerType: (*LogsServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Export",
			Handler:    _LogsService_Export_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "logs_service.proto",
}
